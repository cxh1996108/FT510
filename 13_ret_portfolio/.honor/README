In this assignment, you will write a more sophisticated retirement
calculator, in which your portfolio consists of investments in
equities, bonds, or a combination. Your program will read historical
data, calculate rates of return, and output the cumulative investment
for each of three investment strategies to a file. 

For each portfolio option, your program should calculate the
cumulative investment each month. We will assume the monthly deposit
begins at 100.00 and increases by 2.5% each new year (in
January). Generally, the cumulative investment is calculated as
follows: the new balance is the previous balance, plus the interest it
earns based on that month's rate of return, plus the monthly
contribution. The rate of return will depend on the investment
strategy, as described in the portfolio options below. 

Portfolio strategy 1: invest in equities
----------------------------------------

For this investment strategy, the cumulative portfolio and the monthly
contributions will all be invested in the S&P 500 index. For the S&P
500 investment, the rate of return (ROR) is calculated as follows:

Portfolio ROR(t) = S&P ROR(t) + Div ROR(t), where
S&P ROR(t) = S&P(t) / S&P(t-1) – 1 
Div ROR(t) = [Div(t) / 12] / S&P(t),

Where (t) indicates the value at that time, and (t-1) indicates the
value the previous month. 

As an example, if the index level of a particular month is 103.30, the
previous month was 99.17, and the dividend is 3.07, then
the S&P ROR is
103.30 / 99.17 - 1 = 4.16%,
the dividend ROR is
[3.07 / 12] / 103.30 = 0.25%,
and the total ROR is 4.41%. 

So if the previous balance was 0.00, and the monthly contribution is
100.00, then the new balance is 
0.00 * (1 + 0.0441) + 100.00 = 100.00.

If the next month's total ROR is 2.08%, then the new balance is
100.00 * (1 + 0.0208) + 100.00 = 202.08. 

Portfolio strategy 2: invest in bonds
-------------------------------------

For this investment strategy, the monthly contribution will be
invested in US government bonds. For the US bond investment, the
(monthly) rate of return is calculated as follows:

Bond ROR(t) = Bond(t) / 12

Note: this is a simplification that ignores the semiannual compounding
of interest for bonds, but this will have minimal impact on the
numerical result. 

As an example, if the (yearly) bond rate of a particular month is
5.95%, then the (monthly) bond ROR is
5.95% / 12 = 0.50%, 

So if the previous balance was 0.00, and the monthly contribution is
100.00, then the new balance is
0.00 * (1 + 0.0050) + 100.00 = 100.00. 

If the next month's ROR is 0.51%, then the new balance is
100.00 * (1 + 0.0051) + 100.00 = 200.51. 

Portfolio strategy 3: "lifecycle" investment
--------------------------------------------

For this investment strategy, each month, you will invest the monthly
contribution in a combination of the S&P 500 and US government
bonds. The strategy assumes that the investor is comfortable with a
more volatile equity portfolio early in her working life because the
expected returns are higher over the long run. But she wants to shift
the portfolio gradually into more stable bonds as she gets closer to
retirement. Here, we will assume the investor begins the lifecycle
allocation for equities at 100% and decreases this by 2% each year (in
January).

Each month, the new balance is calculated as the previous balance in
equities, plus interest from equities, plus the previous balance in
bonds, plus the interest from bonds, plus the monthly
contribution. That is, 

Cumulative invest(t) =
Cumulative invest(t-1) * [1 + S&P ROR(t)] * lifecycle allocation(t)
+ Cumulative invest(t-1) * [1 + Bond ROR(t)] * [1 - lifecycle allocation(t)] + Deposit(t),

where S&P ROR is the total ROR from this investment.

As an example, if the S&P ROR is 4.41%, the bond ROR is 0.50%, the
previous balance was 0.00, the lifecycle allocation is 100%, and the
monthly contribution is 100.00, then the new balance is 
0.00 * (1 + 0.0441) * 100% + 0.00 * (1 + 0.0050) * (1 – 100%) + 100.00
= 100.00.

The next year, the lifecycle allocation decreases to 98%, so (assuming
that the portfolio is worth 1309.33 at the end of the first year) the
calculation would be: 
1309.33 * (1 + 0.0099) * 98% + 1309.33 * (1 + 0.0054) * (1 - 98%) +
102.50
= 1424.65.

Technical instructions
----------------------

Your program will take four command line arguments: the name of a file
from which to read the S&P 500 index levels, the name of a file from
which to read US government bond rates, the date the portfolio starts,
and the date the portfolio ends. Dates will represent the year and
month with the year before a decimal point, and the month as an
integer (01-12) after the decimal point, such that 1971.12 is December
1971, and 2017.01 is January 2017. 

Your program should read the historical data from each file and
calculate an array of rates of return for the S&P 500 and for US
bonds. For full credit, your program should abstract out reading each
line from the file and finding the ROR by passing a function pointer
to the function that reads from the file, telling the readFile
function how to calculate the ROR from the given input string. I
recommend creating a struct in retirement.h to hold the array of ROR. 

Next, your program should do the portfolio calculations for each
investment strategy. In retirement.h, you should see the
ret_portfolio_t type, which holds an array of dates, an array of the
cumulative investments, and the size of these arrays. Your program
should allocate and populate one of these structs for each investment
strategy. Look for opportunities for abstraction here! 

Finally, write the results to a file "portfolio.csv", where each line
is the date followed by the three investment strategies' cumulative
investments at that date, separated by commas. 

For example, if your program is called

./ret_portfolio sp_data.csv bond_data.csv 1971.12 2017.12

it should produce identical output to that found in example.csv.

As always, your program should valgrind cleanly and report errors in a
reasonable way. For full credit, it should also use good abstraction.
