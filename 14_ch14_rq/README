As always, read and understand Chapter 14, then answer these questions
in "answers.txt".

For questions 1 and 2, consider the following code fragment:

class Xyz {
  //other things ommitted..
  void someMethod(int x) {
    //method body ommitted.
  }
};

1.  How many parameters (including implicit) does the "someMethod"
    method in class Xyz shown above take?

    A.  0
    B.  1
    C.  2
    D.  3

2.  Inside the body of someMethod, what is the type of "this"?

    A.  Xyz *
    B.  const Xyz *
    C.  Xyz * const
    D.  const Xyz * const 
    E.  None of the above

3.  Which of the following types is illegal?

    A.  int &
    B.  int & *
    C.  int * &
    D.  const int &
    E.  None of the above

4.  Which "part of speech" do classes correspond to?

    A.  Nouns
    B.  Verbs
    C.  Adjectives
    D.  Adverbs

5.  Which "part of speech" do methods correspond to?

    A.  Nouns
    B.  Verbs
    C.  Adjectives
    D.  Adverbs

6.  Which of the following terms describes a type which can be
    directly turned into a C struct (i.e., is just a sequence of fields
    in memory): 

    A.  Virtual
    B.  Raw
    C.  C-ty
    D.  POD
    E.  const

7. "Under the hood" a reference is a _______.

    A.  pointer
    B.  struct
    C.  union
    D.  float (in C++03 or earlier, but a double in C++11 or later)

8.  In C++, the :: operator is called the _______ operator.

    A.  indirect reference
    B.  namespace decharacterization
    C.  bitwise cast
    D.  scope resolution

9.  What characteristic must a reference have in order for it to be
    legal to initialize it from something that is not an lvalue? 

    A.  It must reference a POD type.
    B.  It must reference a const type.
    C.  It must reference a struct or class type.
    D.  It must reference an int type.

10. What does it mean to add "const" between the ) and { of a method
    declaration that is, int foo(void) const {...}?

    A.  The method should be consantly called.
    B.  The object pointed to by "this" is const.
    C.  The return type is const.
    D.  The method may not modify any global state.
